Given nix (attribute):
  {
    foo = pkgs.callPackage ./examples/foo {};
  }

Do (reindent):
  vip=

Expect (indentation):
~~~~~~~
  {
    foo = pkgs.callPackage ./examples/foo {};
  }
~~~~~~~

Execute (syntax):
  AssertEqual SyntaxOf('foo'), 'nixAttribute'

Given nix (list):
  {
    foo = [
      a
      b
    ]
  }

Do (reindent):
  vip=

Expect (indentation):
~~~~~~~
  {
    foo = [
      a
      b
    ]
  }
~~~~~~~

Execute (syntax):
  AssertEqual SyntaxOf('foo'), 'nixAttribute'

Given nix (string):
  "https://github.com/${owner}/${repo}/archive/${rev}.tar.gz"

Execute (syntax):
  AssertEqual SyntaxOf('"'), 'nixStringDelimiter'
  AssertEqual SyntaxOf('https'), 'nixString'
  AssertEqual SyntaxOf('${'), 'nixInterpolationDelimiter'
  AssertEqual SyntaxOf('}'), 'nixInterpolationDelimiter'
  AssertEqual SyntaxOf('owner'), 'nixInterpolationParam'
  AssertEqual SyntaxOf('repo'), 'nixInterpolationParam'
  AssertEqual SyntaxOf('rev'), 'nixInterpolationParam'

Given nix (path):
  https://github.com/LnL7/vim-nix

Execute (syntax):
  AssertEqual SyntaxOf('https'), 'nixPath'
  AssertEqual SyntaxOf('github'), 'nixPath'
  AssertEqual SyntaxOf('nix'), 'nixPath'

Given nix (let):
  let
    foo = true;
    bar = false;
  in foo

Do (reindent):
  vip=

Expect (indentation):
~~~~~~~
  let
    foo = true;
    bar = false;
  in foo
~~~~~~~

Execute (syntax):
  AssertEqual SyntaxOf('let'), 'nixKeyword'
  AssertEqual SyntaxOf('in'), 'nixKeyword'
  AssertEqual SyntaxOf('foo'), 'nixAttribute'
  AssertEqual SyntaxOf('bar'), 'nixAttribute'
